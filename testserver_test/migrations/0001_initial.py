# Generated by Django 2.2.5 on 2019-10-19 11:48

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme_id', models.TextField(null=True)),
                ('time', models.TextField()),
                ('person_id', models.BigIntegerField()),
                ('contains', models.TextField()),
                ('likes', models.IntegerField()),
                ('replies', models.IntegerField()),
                ('comments_num', models.IntegerField()),
            ],
            options={
                'db_table': 'Comments',
            },
        ),
        migrations.CreateModel(
            name='EducationalClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('themeid', models.CharField(max_length=10)),
                ('filePath', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='InvestigationQuestions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('type', models.TextField()),
                ('themeid', models.CharField(default='null', max_length=30)),
                ('selectionA', models.TextField()),
                ('selectionB', models.TextField()),
                ('selectionC', models.TextField()),
                ('selectionD', models.TextField()),
                ('selectionE', models.TextField()),
                ('selectionF', models.TextField()),
                ('selectionG', models.TextField()),
                ('selectionH', models.TextField()),
                ('selectionI', models.TextField()),
                ('selectionJ', models.TextField()),
                ('A_next', models.IntegerField(default=0)),
                ('B_next', models.IntegerField(default=0)),
                ('C_next', models.IntegerField(default=0)),
                ('D_next', models.IntegerField(default=0)),
                ('E_next', models.IntegerField(default=0)),
                ('F_next', models.IntegerField(default=0)),
                ('G_next', models.IntegerField(default=0)),
                ('H_next', models.IntegerField(default=0)),
                ('I_next', models.IntegerField(default=0)),
                ('J_next', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': '单选表（问卷）',
                'db_table': 'SingleQuestions',
            },
        ),
        migrations.CreateModel(
            name='manualQuestions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.TextField()),
                ('title', models.TextField()),
            ],
            options={
                'verbose_name': '填空表（问卷）',
                'db_table': 'ManualQuestions',
            },
        ),
        migrations.CreateModel(
            name='mutipleQuestions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.TextField()),
                ('title', models.TextField()),
                ('selectionA', models.TextField()),
                ('selectionB', models.TextField()),
                ('selectionC', models.TextField()),
                ('selectionD', models.TextField()),
                ('selectionE', models.TextField()),
                ('selectionF', models.TextField()),
                ('selectionG', models.TextField()),
                ('selectionH', models.TextField()),
                ('selectionI', models.TextField()),
                ('selectionJ', models.TextField()),
            ],
            options={
                'verbose_name': '多选表（问卷）',
                'db_table': 'MutipleQuestions',
            },
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('themeid', models.TextField()),
            ],
            options={
                'verbose_name': '调查问卷List',
                'db_table': 'Survey',
            },
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('userId', models.BigIntegerField(primary_key=True, serialize=False)),
                ('type', models.IntegerField()),
                ('userImagePath', models.TextField()),
                ('username', models.CharField(max_length=10)),
                ('password', models.TextField(max_length=20)),
                ('age', models.IntegerField(default=0)),
                ('coin', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': '用户表',
                'db_table': 'UserInfo',
            },
        ),
        migrations.CreateModel(
            name='CommentRelations',
            fields=[
                ('commentrelations_id', models.ForeignKey(on_delete='CASCADE', primary_key=True, serialize=False, to='testserver_test.Comments')),
                ('root', models.BigIntegerField()),
                ('parent_id', models.BigIntegerField()),
                ('child_id', models.BigIntegerField()),
            ],
            options={
                'db_table': 'CommentRelations',
            },
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme_id', models.TextField()),
                ('contains', models.TextField()),
                ('time', models.TextField()),
                ('likes', models.IntegerField()),
                ('comments_num', models.IntegerField()),
                ('author_id', models.ForeignKey(on_delete='CASCADE', to='testserver_test.UserInfo')),
            ],
            options={
                'db_table': 'Theme',
            },
        ),
    ]
